RuleName: Type
NodeIndex:0
NodeIndex:64
	tagName: PrimitiveGrammar targetIndex: 56
			action:NonTerminate : PrimitiveGrammar;
			action:Assign : grammar;
			action:Create : GenGrammarUsingTypeDefine;
NodeIndex:56
	tagName: PrimitiveGrammar targetIndex: 19
			action:NonTerminate : PrimitiveGrammar;
			action:Using : PrimitiveGrammar;
NodeIndex:76
	tagName: PRECLOSE targetIndex: 56
			action:Terminate : PRECLOSE;
RuleName: AlternativeGrammar
NodeIndex:12
	tagName: SequenceGrammar targetIndex: 21
			action:NonTerminate : SequenceGrammar;
			action:Assign : first;
	tagName: AlternativeGrammar targetIndex: 15
			action:NonTerminate : AlternativeGrammar;
			action:Assign : left;
	tagName: STRING targetIndex: 56
			action:Terminate : STRING;
			action:Assign : text;
			action:Create : GenGrammarTextTypeDefine;
	tagName: NAME targetIndex: 56
			action:Terminate : NAME;
			action:Assign : name;
			action:Create : GenGrammarNormalTypeDefine;
	tagName: OPEN targetIndex: 71
			action:Terminate : OPEN;
	tagName: OPTOPEN targetIndex: 67
			action:Terminate : OPTOPEN;
	tagName: USING targetIndex: 64
			action:Terminate : USING;
	tagName: PREOPEN targetIndex: 75
			action:Terminate : PREOPEN;
NodeIndex:71
	tagName: Grammar targetIndex: 72
			action:NonTerminate : Grammar;
			action:Assign : grammar;
NodeIndex:79
	tagName: NAME targetIndex: 80
			action:Terminate : NAME;
			action:Assign : name;
NodeIndex:15
	tagName: OR targetIndex: 16
			action:Terminate : OR;
NodeIndex:85
	tagName: NAME targetIndex: 86
			action:Terminate : NAME;
			action:Assign : name;
NodeIndex:21
	tagName: PrimitiveGrammar targetIndex: 19
			action:NonTerminate : PrimitiveGrammar;
			action:Assign : second;
			action:Create : GenGrammarSequenceTypeDefine;
NodeIndex:75
	tagName: Grammar targetIndex: 76
			action:NonTerminate : Grammar;
			action:Using : Grammar;
NodeIndex:67
	tagName: Grammar targetIndex: 68
			action:NonTerminate : Grammar;
			action:Assign : grammar;
NodeIndex:80
	tagName: ASSIGN targetIndex: 81
			action:Terminate : ASSIGN;
NodeIndex:16
	tagName: SequenceGrammar targetIndex: 13
			action:NonTerminate : SequenceGrammar;
			action:Assign : right;
			action:Create : GenGrammarAlternationTypeDefine;
NodeIndex:83
NodeIndex:19
	tagName: SequenceGrammar targetIndex: 13
			action:NonTerminate : SequenceGrammar;
			action:Using : SequenceGrammar;
NodeIndex:60
	tagName: COLON targetIndex: 61
			action:Terminate : COLON;
NodeIndex:68
	tagName: OPTCLOSE targetIndex: 56
			action:Terminate : OPTCLOSE;
			action:Create : GenGrammarOptionalTypeDefine;
NodeIndex:72
	tagName: CLOSE targetIndex: 56
			action:Terminate : CLOSE;
			action:Create : GenGrammarLoopTypeDefine;
NodeIndex:13
NodeIndex:61
	tagName: NAME targetIndex: 56
			action:Terminate : NAME;
			action:Assign : name;
			action:Create : GenGrammarAssignTypeDefine;
NodeIndex:82
	tagName: SEMICOLON targetIndex: 83
			action:Terminate : SEMICOLON;
			action:Create : GenTokenDefine;
			action:Setter : ignore = False;
RuleName: SequenceGrammar
NodeIndex:18
NodeIndex:87
	tagName: STRING targetIndex: 88
			action:Terminate : STRING;
			action:Assign : regex;
RuleName: Enum
NodeIndex:23
RuleName: EnumMember
NodeIndex:25
NodeIndex:92
	tagName: RuleDecl targetIndex: 93
			action:NonTerminate : RuleDecl;
			action:Assign : rules;
RuleName: SetterGrammar
NodeIndex:28
	tagName: NAME targetIndex: 29
			action:Terminate : NAME;
			action:Assign : name;
RuleName: ParserDecl
NodeIndex:93
	tagName: NAME targetIndex: 26
			action:Terminate : NAME;
			action:Assign : name;
	tagName: GenTableDefine targetIndex: 94
			action:Create : GenTableDefine;
	tagName: TokenDecl targetIndex: 93
			action:NonTerminate : TokenDecl;
			action:Assign : tokens;
	tagName: CLOSE targetIndex: 24
			action:Terminate : CLOSE;
			action:Create : GenEnumTypeDefine;
	tagName: TOKEN targetIndex: 1
			action:Terminate : TOKEN;
			action:Create : GenStringTypeObject;
	tagName: ASSIGN targetIndex: 91
			action:Terminate : ASSIGN;
	tagName: SEMICOLON targetIndex: 92
			action:Terminate : SEMICOLON;
			action:Create : GenRuleDefine;
NodeIndex:29
	tagName: ASSIGN targetIndex: 30
			action:Terminate : ASSIGN;
NodeIndex:94
NodeIndex:30
	tagName: STRING targetIndex: 31
			action:Terminate : STRING;
			action:Assign : value;
			action:Create : GenGrammarSetterTypeDefine;
NodeIndex:31
RuleName: Class
NodeIndex:32
RuleName: TypeDecl
NodeIndex:35
RuleName: ClassMember
NodeIndex:39
RuleName: Grammar
NodeIndex:43
	tagName: Grammar targetIndex: 44
			action:NonTerminate : Grammar;
			action:Assign : grammar;
NodeIndex:44
	tagName: AS targetIndex: 45
			action:Terminate : AS;
	tagName: WITH targetIndex: 49
			action:Terminate : WITH;
NodeIndex:45
	tagName: Type targetIndex: 46
			action:NonTerminate : Type;
			action:Assign : type;
			action:Create : GenGrammarCreateTypeDefine;
NodeIndex:49
	tagName: OPEN targetIndex: 50
			action:Terminate : OPEN;
NodeIndex:46
	tagName: Grammar targetIndex: 44
			action:NonTerminate : Grammar;
			action:Assign : grammar;
NodeIndex:50
	tagName: NAME targetIndex: 51
			action:Terminate : NAME;
			action:Assign : name;
NodeIndex:51
	tagName: ASSIGN targetIndex: 52
			action:Terminate : ASSIGN;
NodeIndex:52
	tagName: STRING targetIndex: 53
			action:Terminate : STRING;
			action:Assign : value;
NodeIndex:53
	tagName: CLOSE targetIndex: 46
			action:Terminate : CLOSE;
			action:Create : GenGrammarSetterTypeDefine;
RuleName: PrimitiveGrammar
NodeIndex:55
RuleName: TokenDecl
NodeIndex:78
	tagName: TOKEN targetIndex: 79
			action:Terminate : TOKEN;
	tagName: DISCARDTOKEN targetIndex: 85
			action:Terminate : DISCARDTOKEN;
NodeIndex:86
	tagName: ASSIGN targetIndex: 87
			action:Terminate : ASSIGN;
NodeIndex:81
	tagName: STRING targetIndex: 82
			action:Terminate : STRING;
			action:Assign : regex;
NodeIndex:24
	tagName: Enum targetIndex: 36
			action:NonTerminate : Enum;
			action:Using : Enum;
NodeIndex:88
	tagName: SEMICOLON targetIndex: 83
			action:Terminate : SEMICOLON;
			action:Create : GenTokenDefine;
			action:Setter : ignore = True;
NodeIndex:26
	tagName: COMMA targetIndex: 27
			action:Terminate : COMMA;
			action:Create : GenEnumMemberTypeDefine;
RuleName: RuleDecl
NodeIndex:90
NodeIndex:27
	tagName: EnumMember targetIndex: 93
			action:NonTerminate : EnumMember;
			action:Assign : members;
NodeIndex:91
	tagName: Grammar targetIndex: 93
			action:NonTerminate : Grammar;
			action:Assign : grammars;
NodeIndex:34
	tagName: Class targetIndex: 36
			action:NonTerminate : Class;
			action:Using : Class;
NodeIndex:1
	tagName: Type targetIndex: 5
			action:NonTerminate : Type;
			action:Assign : parent;
NodeIndex:36
	tagName: TypeDecl targetIndex: 93
			action:NonTerminate : TypeDecl;
			action:Assign : types;
NodeIndex:5
	tagName: DOT targetIndex: 6
			action:Terminate : DOT;
NodeIndex:40
	tagName: NAME targetIndex: 41
			action:Terminate : NAME;
			action:Assign : name;
NodeIndex:9
	tagName: OPTOPEN targetIndex: 10
			action:Terminate : OPTOPEN;
NodeIndex:33
NodeIndex:6
	tagName: NAME targetIndex: 1
			action:Terminate : NAME;
			action:Assign : name;
			action:Create : GenSubTypeObject;
NodeIndex:41
	tagName: SEMICOLON targetIndex: 42
			action:Terminate : SEMICOLON;
			action:Create : GenClassMemberTypeDefine;
NodeIndex:10
	tagName: OPTCLOSE targetIndex: 1
			action:Terminate : OPTCLOSE;
			action:Create : GenArrayTypeObject;
NodeIndex:42
	tagName: ClassMember targetIndex: 93
			action:NonTerminate : ClassMember;
			action:Assign : members;
