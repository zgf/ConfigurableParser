RuleName: EnumMember ::=     Terminate : NAME    Assign : name    Terminate : COMMA    Create : GenEnumMemberTypeDefine
RuleName: Type ::=     Terminate : NAME    Assign : name    Create : GenNormalTypeObject
RuleName: Type ::=     Terminate : TOKEN    Create : GenStringTypeObject
RuleName: Type ::=     NonTerminate : Type    Assign : parent    Terminate : DOT    Terminate : NAME    Assign : name    Create : GenSubTypeObject
RuleName: Type ::=     NonTerminate : Type    Assign : element    Terminate : OPTOPEN    Terminate : OPTCLOSE    Create : GenArrayTypeObject
RuleName: ClassMember ::=     NonTerminate : Type    Assign : type    Terminate : NAME    Assign : name    Terminate : SEMICOLON    Create : GenClassMemberTypeDefine
RuleName: Enum ::=     NonTerminate : EnumMember    Assign : members    Terminate : CLOSE    Create : GenEnumTypeDefine
RuleName: SequenceGrammar ::=     NonTerminate : PrimitiveGrammar    Using : PrimitiveGrammar
RuleName: SequenceGrammar ::=     NonTerminate : SequenceGrammar    Assign : first    NonTerminate : PrimitiveGrammar    Assign : second    Create : GenGrammarSequenceTypeDefine
RuleName: Class ::=     NonTerminate : ClassMember    Assign : members    NonTerminate : TypeDecl    Assign : subTypes
RuleName: Class ::=     NonTerminate : ClassMember    Assign : members    Terminate : CLOSE    Create : GenClassTypeDefine
RuleName: TypeDecl ::=     NonTerminate : Enum    Using : Enum
RuleName: TypeDecl ::=     NonTerminate : Class    Using : Class
RuleName: SetterGrammar ::=     Terminate : NAME    Assign : name    Terminate : ASSIGN    Terminate : STRING    Assign : value    Create : GenGrammarSetterTypeDefine
RuleName: AlternativeGrammar ::=     NonTerminate : SequenceGrammar    Using : SequenceGrammar
RuleName: AlternativeGrammar ::=     NonTerminate : AlternativeGrammar    Assign : left    Terminate : OR    NonTerminate : SequenceGrammar    Assign : right    Create : GenGrammarAlternationTypeDefine
RuleName: Grammar ::=     NonTerminate : Grammar    Assign : grammar    Terminate : AS    NonTerminate : Type    Assign : type    Create : GenGrammarCreateTypeDefine
RuleName: Grammar ::=     NonTerminate : Grammar    Assign : grammar    Terminate : WITH    Terminate : OPEN    Terminate : NAME    Assign : name    Terminate : ASSIGN    Terminate : STRING    Assign : value    Terminate : CLOSE    Create : GenGrammarSetterTypeDefine
RuleName: PrimitiveGrammar ::=     Terminate : NAME    Assign : name    Create : GenGrammarNormalTypeDefine
RuleName: PrimitiveGrammar ::=     Terminate : STRING    Assign : text    Create : GenGrammarTextTypeDefine
RuleName: PrimitiveGrammar ::=     NonTerminate : PrimitiveGrammar    Assign : grammar    Terminate : COLON    Terminate : NAME    Assign : name    Create : GenGrammarAssignTypeDefine
RuleName: PrimitiveGrammar ::=     Terminate : USING    NonTerminate : PrimitiveGrammar    Assign : grammar    Create : GenGrammarUsingTypeDefine
RuleName: PrimitiveGrammar ::=     Terminate : OPTOPEN    NonTerminate : Grammar    Assign : grammar    Terminate : OPTCLOSE    Create : GenGrammarOptionalTypeDefine
RuleName: PrimitiveGrammar ::=     Terminate : OPEN    NonTerminate : Grammar    Assign : grammar    Terminate : CLOSE    Create : GenGrammarLoopTypeDefine
RuleName: PrimitiveGrammar ::=     Terminate : PREOPEN    NonTerminate : Grammar    Using : Grammar    Terminate : PRECLOSE
RuleName: TokenDecl ::=     Terminate : TOKEN    Terminate : NAME    Assign : name    Terminate : ASSIGN    Terminate : STRING    Assign : regex    Terminate : SEMICOLON    Create : GenTokenDefine    Setter : ignore = False
RuleName: TokenDecl ::=     Terminate : DISCARDTOKEN    Terminate : NAME    Assign : name    Terminate : ASSIGN    Terminate : STRING    Assign : regex    Terminate : SEMICOLON    Create : GenTokenDefine    Setter : ignore = True
RuleName: RuleDecl ::=     Terminate : ASSIGN    NonTerminate : Grammar    Assign : grammars    Terminate : SEMICOLON    Create : GenRuleDefine
RuleName: ParserDecl ::=     NonTerminate : TypeDecl    Assign : types    NonTerminate : TokenDecl    Assign : tokens    NonTerminate : RuleDecl    Assign : rules    Create : GenTableDefine
